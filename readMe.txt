2022-07-27
1.主要是要完成api的功能
2.考虑到有一部分是需要串口与单片机通信，所以增加了server端，用于接收api给单片机发送的数据，然后由server控制的串口发送到单片机
3.交叉编译时 make CROSS_COMPILE=aarch64-linux-gnu-
4.不需要交叉编译时，直接make
5.使用open，write函数之后，好像不支持动态库的方式编译,导致编译动态库的时候，直接指定c文件



2022-07-28
1.makefile的结构做了一些小的调整，但是仍然有点问题，就是不会进入到目录中进行编译，即使目录中的文件被修改了。
2.基于1的问题，建议每一次都是make clean and make
3.一定要记得cp libdrvapi22134.so /usr/lib 不然没有更新库，就会比较尴尬！！
4.完成了msgq的链路，和cpu与单片机的串口通信。
5.目前单片机与cpu的通信是固定4字节，包括1个字节的帧头（0xa5），2个数据字节和一个校验和（前3个字节累加）。
6.由于之前定义了按键的数据发送，这次更新的通信主要是cpu发往单片机的控制（led控制，led状态）。第一个字节的数据从50（十进制）开始，用于表示通信的命令，第二个字节表示命令带的参数。
7.单片机收到数据后，需要做出应答，包括数据值的返回。第一个字节仍然是命令，第二个字节是0（一般，表示成功），或者小于254，255表示出错。
8 msgq，由于只有一个队列，所以使用不同的type来区分是发给api的还是server的。server的接收type定义为678，api的接收是234，可能还会加上命令，这样用于区分服务器给哪一条命令做出的应答。
9.由于单片机没法控制lcd屏幕的开启和关闭，程序已经调整为对于pwm的调整，关闭屏幕实际是pwm调整为0.开启时调整为200



2022-08-01
1. 使用iic的方式直接控制声卡，取消了mixer的方法，mixer方法没法获取某些寄存器的值，就统一改为iic的方式。
2.还没有进行功能验证测试，运行了一下没有什么问题。


2022-08-02
1.增加了rtc的接口部分
2.还在进一步完善中。



2022-08-08
1. 增加对多次运行的限制，server程序和api程序不允许多次运行，一次只能运行一个实体
2. server修改为守护进程，log日志需要使用绝对路径。
3.


